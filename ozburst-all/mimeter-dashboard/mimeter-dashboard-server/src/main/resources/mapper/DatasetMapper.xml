<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="run.mone.mimeter.dashboard.mapper.DatasetMapper">
  <resultMap id="BaseResultMap" type="run.mone.mimeter.dashboard.pojo.Dataset">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="default_param_name" jdbcType="VARCHAR" property="defaultParamName" />
    <result column="ignore_first_row" jdbcType="INTEGER" property="ignoreFirstRow" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="file_url" jdbcType="VARCHAR" property="fileUrl" />
    <result column="file_ks_key" jdbcType="VARCHAR" property="fileKsKey" />
    <result column="file_rows" jdbcType="BIGINT" property="fileRows" />
    <result column="file_size" jdbcType="BIGINT" property="fileSize" />
    <result column="interface_url" jdbcType="VARCHAR" property="interfaceUrl" />
    <result column="traffic_record_id" jdbcType="INTEGER" property="trafficRecordId" />
    <result column="ctime" jdbcType="BIGINT" property="ctime" />
    <result column="utime" jdbcType="BIGINT" property="utime" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="updater" jdbcType="VARCHAR" property="updater" />
    <result column="tenant" jdbcType="VARCHAR" property="tenant" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="run.mone.mimeter.dashboard.pojo.Dataset">
    <result column="preview_file_rows" jdbcType="LONGVARCHAR" property="previewFileRows" />
    <result column="header" jdbcType="LONGVARCHAR" property="header" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, note, type, default_param_name, ignore_first_row, file_name, file_url, 
    file_ks_key, file_rows, file_size, interface_url, traffic_record_id, ctime, utime, 
    creator, updater, tenant
  </sql>
  <sql id="Blob_Column_List">
    preview_file_rows, header
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="run.mone.mimeter.dashboard.pojo.DatasetExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dataset
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="run.mone.mimeter.dashboard.pojo.DatasetExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dataset
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dataset
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dataset
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="run.mone.mimeter.dashboard.pojo.DatasetExample">
    delete from dataset
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="run.mone.mimeter.dashboard.pojo.Dataset">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into dataset (name, note, type, 
      default_param_name, ignore_first_row, file_name, 
      file_url, file_ks_key, file_rows, 
      file_size, interface_url, traffic_record_id, 
      ctime, utime, creator, 
      updater, tenant, preview_file_rows, 
      header)
    values (#{name,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{defaultParamName,jdbcType=VARCHAR}, #{ignoreFirstRow,jdbcType=INTEGER}, #{fileName,jdbcType=VARCHAR}, 
      #{fileUrl,jdbcType=VARCHAR}, #{fileKsKey,jdbcType=VARCHAR}, #{fileRows,jdbcType=BIGINT}, 
      #{fileSize,jdbcType=BIGINT}, #{interfaceUrl,jdbcType=VARCHAR}, #{trafficRecordId,jdbcType=INTEGER}, 
      #{ctime,jdbcType=BIGINT}, #{utime,jdbcType=BIGINT}, #{creator,jdbcType=VARCHAR}, 
      #{updater,jdbcType=VARCHAR}, #{tenant,jdbcType=VARCHAR}, #{previewFileRows,jdbcType=LONGVARCHAR}, 
      #{header,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="run.mone.mimeter.dashboard.pojo.Dataset">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into dataset
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="defaultParamName != null">
        default_param_name,
      </if>
      <if test="ignoreFirstRow != null">
        ignore_first_row,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="fileUrl != null">
        file_url,
      </if>
      <if test="fileKsKey != null">
        file_ks_key,
      </if>
      <if test="fileRows != null">
        file_rows,
      </if>
      <if test="fileSize != null">
        file_size,
      </if>
      <if test="interfaceUrl != null">
        interface_url,
      </if>
      <if test="trafficRecordId != null">
        traffic_record_id,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="utime != null">
        utime,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="updater != null">
        updater,
      </if>
      <if test="tenant != null">
        tenant,
      </if>
      <if test="previewFileRows != null">
        preview_file_rows,
      </if>
      <if test="header != null">
        header,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="defaultParamName != null">
        #{defaultParamName,jdbcType=VARCHAR},
      </if>
      <if test="ignoreFirstRow != null">
        #{ignoreFirstRow,jdbcType=INTEGER},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileUrl != null">
        #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="fileKsKey != null">
        #{fileKsKey,jdbcType=VARCHAR},
      </if>
      <if test="fileRows != null">
        #{fileRows,jdbcType=BIGINT},
      </if>
      <if test="fileSize != null">
        #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="interfaceUrl != null">
        #{interfaceUrl,jdbcType=VARCHAR},
      </if>
      <if test="trafficRecordId != null">
        #{trafficRecordId,jdbcType=INTEGER},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=BIGINT},
      </if>
      <if test="utime != null">
        #{utime,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updater != null">
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="tenant != null">
        #{tenant,jdbcType=VARCHAR},
      </if>
      <if test="previewFileRows != null">
        #{previewFileRows,jdbcType=LONGVARCHAR},
      </if>
      <if test="header != null">
        #{header,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="run.mone.mimeter.dashboard.pojo.DatasetExample" resultType="java.lang.Long">
    select count(*) from dataset
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dataset
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.defaultParamName != null">
        default_param_name = #{record.defaultParamName,jdbcType=VARCHAR},
      </if>
      <if test="record.ignoreFirstRow != null">
        ignore_first_row = #{record.ignoreFirstRow,jdbcType=INTEGER},
      </if>
      <if test="record.fileName != null">
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.fileUrl != null">
        file_url = #{record.fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.fileKsKey != null">
        file_ks_key = #{record.fileKsKey,jdbcType=VARCHAR},
      </if>
      <if test="record.fileRows != null">
        file_rows = #{record.fileRows,jdbcType=BIGINT},
      </if>
      <if test="record.fileSize != null">
        file_size = #{record.fileSize,jdbcType=BIGINT},
      </if>
      <if test="record.interfaceUrl != null">
        interface_url = #{record.interfaceUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.trafficRecordId != null">
        traffic_record_id = #{record.trafficRecordId,jdbcType=INTEGER},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=BIGINT},
      </if>
      <if test="record.utime != null">
        utime = #{record.utime,jdbcType=BIGINT},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.updater != null">
        updater = #{record.updater,jdbcType=VARCHAR},
      </if>
      <if test="record.tenant != null">
        tenant = #{record.tenant,jdbcType=VARCHAR},
      </if>
      <if test="record.previewFileRows != null">
        preview_file_rows = #{record.previewFileRows,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.header != null">
        header = #{record.header,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update dataset
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      default_param_name = #{record.defaultParamName,jdbcType=VARCHAR},
      ignore_first_row = #{record.ignoreFirstRow,jdbcType=INTEGER},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      file_url = #{record.fileUrl,jdbcType=VARCHAR},
      file_ks_key = #{record.fileKsKey,jdbcType=VARCHAR},
      file_rows = #{record.fileRows,jdbcType=BIGINT},
      file_size = #{record.fileSize,jdbcType=BIGINT},
      interface_url = #{record.interfaceUrl,jdbcType=VARCHAR},
      traffic_record_id = #{record.trafficRecordId,jdbcType=INTEGER},
      ctime = #{record.ctime,jdbcType=BIGINT},
      utime = #{record.utime,jdbcType=BIGINT},
      creator = #{record.creator,jdbcType=VARCHAR},
      updater = #{record.updater,jdbcType=VARCHAR},
      tenant = #{record.tenant,jdbcType=VARCHAR},
      preview_file_rows = #{record.previewFileRows,jdbcType=LONGVARCHAR},
      header = #{record.header,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dataset
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      default_param_name = #{record.defaultParamName,jdbcType=VARCHAR},
      ignore_first_row = #{record.ignoreFirstRow,jdbcType=INTEGER},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      file_url = #{record.fileUrl,jdbcType=VARCHAR},
      file_ks_key = #{record.fileKsKey,jdbcType=VARCHAR},
      file_rows = #{record.fileRows,jdbcType=BIGINT},
      file_size = #{record.fileSize,jdbcType=BIGINT},
      interface_url = #{record.interfaceUrl,jdbcType=VARCHAR},
      traffic_record_id = #{record.trafficRecordId,jdbcType=INTEGER},
      ctime = #{record.ctime,jdbcType=BIGINT},
      utime = #{record.utime,jdbcType=BIGINT},
      creator = #{record.creator,jdbcType=VARCHAR},
      updater = #{record.updater,jdbcType=VARCHAR},
      tenant = #{record.tenant,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="run.mone.mimeter.dashboard.pojo.Dataset">
    update dataset
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="defaultParamName != null">
        default_param_name = #{defaultParamName,jdbcType=VARCHAR},
      </if>
      <if test="ignoreFirstRow != null">
        ignore_first_row = #{ignoreFirstRow,jdbcType=INTEGER},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileUrl != null">
        file_url = #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="fileKsKey != null">
        file_ks_key = #{fileKsKey,jdbcType=VARCHAR},
      </if>
      <if test="fileRows != null">
        file_rows = #{fileRows,jdbcType=BIGINT},
      </if>
      <if test="fileSize != null">
        file_size = #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="interfaceUrl != null">
        interface_url = #{interfaceUrl,jdbcType=VARCHAR},
      </if>
      <if test="trafficRecordId != null">
        traffic_record_id = #{trafficRecordId,jdbcType=INTEGER},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=BIGINT},
      </if>
      <if test="utime != null">
        utime = #{utime,jdbcType=BIGINT},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updater != null">
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="tenant != null">
        tenant = #{tenant,jdbcType=VARCHAR},
      </if>
      <if test="previewFileRows != null">
        preview_file_rows = #{previewFileRows,jdbcType=LONGVARCHAR},
      </if>
      <if test="header != null">
        header = #{header,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="run.mone.mimeter.dashboard.pojo.Dataset">
    update dataset
    set name = #{name,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      default_param_name = #{defaultParamName,jdbcType=VARCHAR},
      ignore_first_row = #{ignoreFirstRow,jdbcType=INTEGER},
      file_name = #{fileName,jdbcType=VARCHAR},
      file_url = #{fileUrl,jdbcType=VARCHAR},
      file_ks_key = #{fileKsKey,jdbcType=VARCHAR},
      file_rows = #{fileRows,jdbcType=BIGINT},
      file_size = #{fileSize,jdbcType=BIGINT},
      interface_url = #{interfaceUrl,jdbcType=VARCHAR},
      traffic_record_id = #{trafficRecordId,jdbcType=INTEGER},
      ctime = #{ctime,jdbcType=BIGINT},
      utime = #{utime,jdbcType=BIGINT},
      creator = #{creator,jdbcType=VARCHAR},
      updater = #{updater,jdbcType=VARCHAR},
      tenant = #{tenant,jdbcType=VARCHAR},
      preview_file_rows = #{previewFileRows,jdbcType=LONGVARCHAR},
      header = #{header,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="run.mone.mimeter.dashboard.pojo.Dataset">
    update dataset
    set name = #{name,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      default_param_name = #{defaultParamName,jdbcType=VARCHAR},
      ignore_first_row = #{ignoreFirstRow,jdbcType=INTEGER},
      file_name = #{fileName,jdbcType=VARCHAR},
      file_url = #{fileUrl,jdbcType=VARCHAR},
      file_ks_key = #{fileKsKey,jdbcType=VARCHAR},
      file_rows = #{fileRows,jdbcType=BIGINT},
      file_size = #{fileSize,jdbcType=BIGINT},
      interface_url = #{interfaceUrl,jdbcType=VARCHAR},
      traffic_record_id = #{trafficRecordId,jdbcType=INTEGER},
      ctime = #{ctime,jdbcType=BIGINT},
      utime = #{utime,jdbcType=BIGINT},
      creator = #{creator,jdbcType=VARCHAR},
      updater = #{updater,jdbcType=VARCHAR},
      tenant = #{tenant,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into dataset
    (name, note, type, default_param_name, ignore_first_row, file_name, file_url, file_ks_key, 
      file_rows, file_size, interface_url, traffic_record_id, ctime, utime, creator, 
      updater, tenant, preview_file_rows, header)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.name,jdbcType=VARCHAR}, #{item.note,jdbcType=VARCHAR}, #{item.type,jdbcType=INTEGER}, 
        #{item.defaultParamName,jdbcType=VARCHAR}, #{item.ignoreFirstRow,jdbcType=INTEGER}, 
        #{item.fileName,jdbcType=VARCHAR}, #{item.fileUrl,jdbcType=VARCHAR}, #{item.fileKsKey,jdbcType=VARCHAR}, 
        #{item.fileRows,jdbcType=BIGINT}, #{item.fileSize,jdbcType=BIGINT}, #{item.interfaceUrl,jdbcType=VARCHAR}, 
        #{item.trafficRecordId,jdbcType=INTEGER}, #{item.ctime,jdbcType=BIGINT}, #{item.utime,jdbcType=BIGINT}, 
        #{item.creator,jdbcType=VARCHAR}, #{item.updater,jdbcType=VARCHAR}, #{item.tenant,jdbcType=VARCHAR}, 
        #{item.previewFileRows,jdbcType=LONGVARCHAR}, #{item.header,jdbcType=LONGVARCHAR}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into dataset (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'note'.toString() == column.value">
          #{item.note,jdbcType=VARCHAR}
        </if>
        <if test="'type'.toString() == column.value">
          #{item.type,jdbcType=INTEGER}
        </if>
        <if test="'default_param_name'.toString() == column.value">
          #{item.defaultParamName,jdbcType=VARCHAR}
        </if>
        <if test="'ignore_first_row'.toString() == column.value">
          #{item.ignoreFirstRow,jdbcType=INTEGER}
        </if>
        <if test="'file_name'.toString() == column.value">
          #{item.fileName,jdbcType=VARCHAR}
        </if>
        <if test="'file_url'.toString() == column.value">
          #{item.fileUrl,jdbcType=VARCHAR}
        </if>
        <if test="'file_ks_key'.toString() == column.value">
          #{item.fileKsKey,jdbcType=VARCHAR}
        </if>
        <if test="'file_rows'.toString() == column.value">
          #{item.fileRows,jdbcType=BIGINT}
        </if>
        <if test="'file_size'.toString() == column.value">
          #{item.fileSize,jdbcType=BIGINT}
        </if>
        <if test="'interface_url'.toString() == column.value">
          #{item.interfaceUrl,jdbcType=VARCHAR}
        </if>
        <if test="'traffic_record_id'.toString() == column.value">
          #{item.trafficRecordId,jdbcType=INTEGER}
        </if>
        <if test="'ctime'.toString() == column.value">
          #{item.ctime,jdbcType=BIGINT}
        </if>
        <if test="'utime'.toString() == column.value">
          #{item.utime,jdbcType=BIGINT}
        </if>
        <if test="'creator'.toString() == column.value">
          #{item.creator,jdbcType=VARCHAR}
        </if>
        <if test="'updater'.toString() == column.value">
          #{item.updater,jdbcType=VARCHAR}
        </if>
        <if test="'tenant'.toString() == column.value">
          #{item.tenant,jdbcType=VARCHAR}
        </if>
        <if test="'preview_file_rows'.toString() == column.value">
          #{item.previewFileRows,jdbcType=LONGVARCHAR}
        </if>
        <if test="'header'.toString() == column.value">
          #{item.header,jdbcType=LONGVARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>