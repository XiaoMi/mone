<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~  Copyright 2020 Xiaomi
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiaomi.youpin.gwdash.dao.mapper.DebugRecordMapper" >
  <resultMap id="BaseResultMap" type="com.xiaomi.youpin.gwdash.dao.model.DebugRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="aid" property="aid" jdbcType="INTEGER" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="http_method" property="httpMethod" jdbcType="VARCHAR" />
    <result column="headers" property="headers" jdbcType="VARCHAR" />
    <result column="timeout" property="timeout" jdbcType="INTEGER" />
    <result column="ctime" property="ctime" jdbcType="BIGINT" />
    <result column="utime" property="utime" jdbcType="BIGINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.xiaomi.youpin.gwdash.dao.model.DebugRecord" extends="BaseResultMap" >
    <result column="params" property="params" jdbcType="LONGVARCHAR" />
    <result column="result" property="result" jdbcType="LONGVARCHAR" />
    <result column="ext" property="ext" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, aid, url, http_method, headers, timeout, ctime, utime
  </sql>
  <sql id="Blob_Column_List" >
    params, result, ext
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.xiaomi.youpin.gwdash.dao.model.DebugRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from debug_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null and limit >= 0" >
      limit #{offset} , #{limit}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xiaomi.youpin.gwdash.dao.model.DebugRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from debug_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null and limit >= 0" >
      limit #{offset} , #{limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from debug_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from debug_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiaomi.youpin.gwdash.dao.model.DebugRecordExample" >
    delete from debug_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiaomi.youpin.gwdash.dao.model.DebugRecord" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into debug_record (aid, url, http_method, 
      headers, timeout, ctime, 
      utime, params, result, 
      ext)
    values (#{aid,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{httpMethod,jdbcType=VARCHAR}, 
      #{headers,jdbcType=VARCHAR}, #{timeout,jdbcType=INTEGER}, #{ctime,jdbcType=BIGINT}, 
      #{utime,jdbcType=BIGINT}, #{params,jdbcType=LONGVARCHAR}, #{result,jdbcType=LONGVARCHAR}, 
      #{ext,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaomi.youpin.gwdash.dao.model.DebugRecord" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into debug_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="aid != null" >
        aid,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="httpMethod != null" >
        http_method,
      </if>
      <if test="headers != null" >
        headers,
      </if>
      <if test="timeout != null" >
        timeout,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
      <if test="utime != null" >
        utime,
      </if>
      <if test="params != null" >
        params,
      </if>
      <if test="result != null" >
        result,
      </if>
      <if test="ext != null" >
        ext,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="aid != null" >
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="httpMethod != null" >
        #{httpMethod,jdbcType=VARCHAR},
      </if>
      <if test="headers != null" >
        #{headers,jdbcType=VARCHAR},
      </if>
      <if test="timeout != null" >
        #{timeout,jdbcType=INTEGER},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=BIGINT},
      </if>
      <if test="utime != null" >
        #{utime,jdbcType=BIGINT},
      </if>
      <if test="params != null" >
        #{params,jdbcType=LONGVARCHAR},
      </if>
      <if test="result != null" >
        #{result,jdbcType=LONGVARCHAR},
      </if>
      <if test="ext != null" >
        #{ext,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiaomi.youpin.gwdash.dao.model.DebugRecordExample" resultType="java.lang.Integer" >
    select count(*) from debug_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update debug_record
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.aid != null" >
        aid = #{record.aid,jdbcType=INTEGER},
      </if>
      <if test="record.url != null" >
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.httpMethod != null" >
        http_method = #{record.httpMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.headers != null" >
        headers = #{record.headers,jdbcType=VARCHAR},
      </if>
      <if test="record.timeout != null" >
        timeout = #{record.timeout,jdbcType=INTEGER},
      </if>
      <if test="record.ctime != null" >
        ctime = #{record.ctime,jdbcType=BIGINT},
      </if>
      <if test="record.utime != null" >
        utime = #{record.utime,jdbcType=BIGINT},
      </if>
      <if test="record.params != null" >
        params = #{record.params,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.result != null" >
        result = #{record.result,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.ext != null" >
        ext = #{record.ext,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update debug_record
    set id = #{record.id,jdbcType=INTEGER},
      aid = #{record.aid,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      http_method = #{record.httpMethod,jdbcType=VARCHAR},
      headers = #{record.headers,jdbcType=VARCHAR},
      timeout = #{record.timeout,jdbcType=INTEGER},
      ctime = #{record.ctime,jdbcType=BIGINT},
      utime = #{record.utime,jdbcType=BIGINT},
      params = #{record.params,jdbcType=LONGVARCHAR},
      result = #{record.result,jdbcType=LONGVARCHAR},
      ext = #{record.ext,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update debug_record
    set id = #{record.id,jdbcType=INTEGER},
      aid = #{record.aid,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      http_method = #{record.httpMethod,jdbcType=VARCHAR},
      headers = #{record.headers,jdbcType=VARCHAR},
      timeout = #{record.timeout,jdbcType=INTEGER},
      ctime = #{record.ctime,jdbcType=BIGINT},
      utime = #{record.utime,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaomi.youpin.gwdash.dao.model.DebugRecord" >
    update debug_record
    <set >
      <if test="aid != null" >
        aid = #{aid,jdbcType=INTEGER},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="httpMethod != null" >
        http_method = #{httpMethod,jdbcType=VARCHAR},
      </if>
      <if test="headers != null" >
        headers = #{headers,jdbcType=VARCHAR},
      </if>
      <if test="timeout != null" >
        timeout = #{timeout,jdbcType=INTEGER},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=BIGINT},
      </if>
      <if test="utime != null" >
        utime = #{utime,jdbcType=BIGINT},
      </if>
      <if test="params != null" >
        params = #{params,jdbcType=LONGVARCHAR},
      </if>
      <if test="result != null" >
        result = #{result,jdbcType=LONGVARCHAR},
      </if>
      <if test="ext != null" >
        ext = #{ext,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xiaomi.youpin.gwdash.dao.model.DebugRecord" >
    update debug_record
    set aid = #{aid,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      http_method = #{httpMethod,jdbcType=VARCHAR},
      headers = #{headers,jdbcType=VARCHAR},
      timeout = #{timeout,jdbcType=INTEGER},
      ctime = #{ctime,jdbcType=BIGINT},
      utime = #{utime,jdbcType=BIGINT},
      params = #{params,jdbcType=LONGVARCHAR},
      result = #{result,jdbcType=LONGVARCHAR},
      ext = #{ext,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaomi.youpin.gwdash.dao.model.DebugRecord" >
    update debug_record
    set aid = #{aid,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      http_method = #{httpMethod,jdbcType=VARCHAR},
      headers = #{headers,jdbcType=VARCHAR},
      timeout = #{timeout,jdbcType=INTEGER},
      ctime = #{ctime,jdbcType=BIGINT},
      utime = #{utime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertOrUpdate" parameterType="com.xiaomi.youpin.gwdash.dao.model.DebugRecord">
    INSERT into debug_record (aid,
                          url,
                          http_method,
                          headers,
                          timeout,
                          params,
                          ctime,
                          utime,
                          result,
                          ext)
    VALUES (#{aid},
            #{url},
            #{httpMethod},
            #{headers},
            #{timeout},
            #{params},
            #{ctime},
            #{utime},
            #{result},
            #{ext})
    ON
    DUPLICATE
    KEY
    UPDATE
    url =
    VALUES(url),
    http_method =
    VALUES(http_method),
    headers =
    VALUES(headers),
    timeout =
    VALUES(timeout),
    params =
    VALUES(params),
    utime =
    VALUES(utime),
    result =
    VALUES(result),
    ext =
    VALUES(ext)
  </insert>
</mapper>