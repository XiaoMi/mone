#server
app.name=trace-etl
server.type=${server.type}
server.port=${server.port}
server.debug=true
server.connection-timeout=1000

dubbo.group=${dubbo.group}
dubbo.protocol.id=${dubbo.protocol.id}
dubbo.protocol.name=${dubbo.protocol.name}
dubbo.protocol.port=${dubbo.protocol.port}
dubbo.registry.address=${dubbo.registry.address}
nacos.config.addrs=${nacos.config.addrs}

log.path=${log.path}

nacos.address=${nacos.address}

es.error.index=${es.error.index}
es.trace.address=${es.trace.address}
es.trace.index.prefix=${es.trace.index.prefix}
es.trace.index.service.prefix=${es.trace.index.service.prefix}
es.trace.index.driver.prefix=${es.trace.index.driver.prefix}
es.trace.username=${es.trace.username}
es.trace.password=${es.trace.password}

es.bulk_actions=${es.bulk_actions}
es.byte_size=${es.byte_size}
es.concurrent_request=${es.concurrent_request}
es.flush_interval=${es.flush_interval}
es.retry_num=${es.retry_num}
es.retry_interval=${es.retry_interval}

spring.redis.cluster.nodes=${spring.redis.cluster.nodes}
# Redis服务器连接密码（默认为空）
spring.redis.password=${spring.redis.password}
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=${spring.redis.jedis.pool.max-active}
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=${spring.redis.pool.max-wait}
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=${spring.redis.pool.max-idle}
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=${spring.redis.jedis.pool.min-idle}
# 连接超时时间（毫秒）
spring.redis.timeout.connection=${spring.redis.timeout.connection}
# 最大重试次数
spring.redis.max-attempts=${spring.redis.max-attempts}

rocks.first.gap=${rocks.first.gap}
rocks.second.gap=${rocks.second.gap}
rocks.first.path=${rocks.first.path}
rocks.second.path=${rocks.second.path}

spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.default.initialPoolSize=10
spring.datasource.default.maxPoolSize=20
spring.datasource.default.minialPoolSize=10
spring.datasource.username=${spring.datasource.username}
spring.datasource.url=${spring.datasource.url}
spring.datasource.password=${spring.datasource.password}

mq.rocketmq.nameseraddr=${mq.rocketmq.nameseraddr}
mq.rocketmq.es.topic=${mq.rocketmq.es.topic}
mq.rocketmq.group=${mq.rocketmq.group}