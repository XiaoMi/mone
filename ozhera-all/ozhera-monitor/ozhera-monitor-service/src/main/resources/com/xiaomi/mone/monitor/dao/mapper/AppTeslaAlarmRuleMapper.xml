<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaomi.mone.monitor.dao.mapper.AppTeslaAlarmRuleMapper">
  <resultMap id="BaseResultMap" type="com.xiaomi.mone.monitor.dao.model.AppTeslaAlarmRule">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="tesla_group" jdbcType="VARCHAR" property="teslaGroup" />
    <result column="alert_type" jdbcType="VARCHAR" property="alertType" />
    <result column="op" jdbcType="VARCHAR" property="op" />
    <result column="value" jdbcType="REAL" property="value" />
    <result column="duration" jdbcType="VARCHAR" property="duration" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="creater" jdbcType="VARCHAR" property="creater" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xiaomi.mone.monitor.dao.model.AppTeslaAlarmRule">
    <result column="exper" jdbcType="LONGVARCHAR" property="exper" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, tesla_group, alert_type, op, value, duration, remark, type, status, creater, 
    create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    exper
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xiaomi.mone.monitor.dao.model.AppTeslaAlarmRuleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from app_tesla_alarm_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null and limit >= 0">
      limit #{offset} , #{limit}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xiaomi.mone.monitor.dao.model.AppTeslaAlarmRuleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from app_tesla_alarm_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null and limit >= 0">
      limit #{offset} , #{limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from app_tesla_alarm_rule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from app_tesla_alarm_rule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiaomi.mone.monitor.dao.model.AppTeslaAlarmRuleExample">
    delete from app_tesla_alarm_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiaomi.mone.monitor.dao.model.AppTeslaAlarmRule">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into app_tesla_alarm_rule (name, tesla_group, alert_type, 
      op, value, duration, remark, 
      type, status, creater, 
      create_time, update_time, exper
      )
    values (#{name,jdbcType=VARCHAR}, #{teslaGroup,jdbcType=VARCHAR}, #{alertType,jdbcType=VARCHAR}, 
      #{op,jdbcType=VARCHAR}, #{value,jdbcType=REAL}, #{duration,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{creater,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{exper,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xiaomi.mone.monitor.dao.model.AppTeslaAlarmRule">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into app_tesla_alarm_rule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="teslaGroup != null">
        tesla_group,
      </if>
      <if test="alertType != null">
        alert_type,
      </if>
      <if test="op != null">
        op,
      </if>
      <if test="value != null">
        value,
      </if>
      <if test="duration != null">
        duration,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="creater != null">
        creater,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="exper != null">
        exper,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="teslaGroup != null">
        #{teslaGroup,jdbcType=VARCHAR},
      </if>
      <if test="alertType != null">
        #{alertType,jdbcType=VARCHAR},
      </if>
      <if test="op != null">
        #{op,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=REAL},
      </if>
      <if test="duration != null">
        #{duration,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="creater != null">
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="exper != null">
        #{exper,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiaomi.mone.monitor.dao.model.AppTeslaAlarmRuleExample" resultType="java.lang.Long">
    select count(*) from app_tesla_alarm_rule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update app_tesla_alarm_rule
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.teslaGroup != null">
        tesla_group = #{record.teslaGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.alertType != null">
        alert_type = #{record.alertType,jdbcType=VARCHAR},
      </if>
      <if test="record.op != null">
        op = #{record.op,jdbcType=VARCHAR},
      </if>
      <if test="record.value != null">
        value = #{record.value,jdbcType=REAL},
      </if>
      <if test="record.duration != null">
        duration = #{record.duration,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.creater != null">
        creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.exper != null">
        exper = #{record.exper,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update app_tesla_alarm_rule
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      tesla_group = #{record.teslaGroup,jdbcType=VARCHAR},
      alert_type = #{record.alertType,jdbcType=VARCHAR},
      op = #{record.op,jdbcType=VARCHAR},
      value = #{record.value,jdbcType=REAL},
      duration = #{record.duration,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      creater = #{record.creater,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      exper = #{record.exper,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update app_tesla_alarm_rule
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      tesla_group = #{record.teslaGroup,jdbcType=VARCHAR},
      alert_type = #{record.alertType,jdbcType=VARCHAR},
      op = #{record.op,jdbcType=VARCHAR},
      value = #{record.value,jdbcType=REAL},
      duration = #{record.duration,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      creater = #{record.creater,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaomi.mone.monitor.dao.model.AppTeslaAlarmRule">
    update app_tesla_alarm_rule
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="teslaGroup != null">
        tesla_group = #{teslaGroup,jdbcType=VARCHAR},
      </if>
      <if test="alertType != null">
        alert_type = #{alertType,jdbcType=VARCHAR},
      </if>
      <if test="op != null">
        op = #{op,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        value = #{value,jdbcType=REAL},
      </if>
      <if test="duration != null">
        duration = #{duration,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="creater != null">
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="exper != null">
        exper = #{exper,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xiaomi.mone.monitor.dao.model.AppTeslaAlarmRule">
    update app_tesla_alarm_rule
    set name = #{name,jdbcType=VARCHAR},
      tesla_group = #{teslaGroup,jdbcType=VARCHAR},
      alert_type = #{alertType,jdbcType=VARCHAR},
      op = #{op,jdbcType=VARCHAR},
      value = #{value,jdbcType=REAL},
      duration = #{duration,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      creater = #{creater,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      exper = #{exper,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaomi.mone.monitor.dao.model.AppTeslaAlarmRule">
    update app_tesla_alarm_rule
    set name = #{name,jdbcType=VARCHAR},
      tesla_group = #{teslaGroup,jdbcType=VARCHAR},
      alert_type = #{alertType,jdbcType=VARCHAR},
      op = #{op,jdbcType=VARCHAR},
      value = #{value,jdbcType=REAL},
      duration = #{duration,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      creater = #{creater,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into app_tesla_alarm_rule
    (name, tesla_group, alert_type, op, value, duration, remark, type, status, creater, 
      create_time, update_time, exper)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.name,jdbcType=VARCHAR}, #{item.teslaGroup,jdbcType=VARCHAR}, #{item.alertType,jdbcType=VARCHAR}, 
        #{item.op,jdbcType=VARCHAR}, #{item.value,jdbcType=REAL}, #{item.duration,jdbcType=VARCHAR}, 
        #{item.remark,jdbcType=VARCHAR}, #{item.type,jdbcType=INTEGER}, #{item.status,jdbcType=INTEGER}, 
        #{item.creater,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, 
        #{item.exper,jdbcType=LONGVARCHAR})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into app_tesla_alarm_rule (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'tesla_group'.toString() == column.value">
          #{item.teslaGroup,jdbcType=VARCHAR}
        </if>
        <if test="'alert_type'.toString() == column.value">
          #{item.alertType,jdbcType=VARCHAR}
        </if>
        <if test="'op'.toString() == column.value">
          #{item.op,jdbcType=VARCHAR}
        </if>
        <if test="'value'.toString() == column.value">
          #{item.value,jdbcType=REAL}
        </if>
        <if test="'duration'.toString() == column.value">
          #{item.duration,jdbcType=VARCHAR}
        </if>
        <if test="'remark'.toString() == column.value">
          #{item.remark,jdbcType=VARCHAR}
        </if>
        <if test="'type'.toString() == column.value">
          #{item.type,jdbcType=INTEGER}
        </if>
        <if test="'status'.toString() == column.value">
          #{item.status,jdbcType=INTEGER}
        </if>
        <if test="'creater'.toString() == column.value">
          #{item.creater,jdbcType=VARCHAR}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'exper'.toString() == column.value">
          #{item.exper,jdbcType=LONGVARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>