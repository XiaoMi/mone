/*
 * Copyright The OpenTelemetry Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply from: "$rootDir/gradle/instrumentation.gradle"

muzzle {
  pass {
    group = "io.grpc"
    module = "grpc-core"
    versions = "[1.6.0,)"
    assertInverse = true
  }
}

def grpcVersion = '1.6.0'

dependencies {
  implementation project(':instrumentation:grpc-1.6:library')

  library "io.grpc:grpc-core:${grpcVersion}"
  
  testInstrumentation project(':instrumentation:netty:netty-4.1:javaagent')

  testLibrary "io.grpc:grpc-netty:${grpcVersion}"
  testLibrary "io.grpc:grpc-protobuf:${grpcVersion}"
  testLibrary "io.grpc:grpc-services:${grpcVersion}"
  testLibrary "io.grpc:grpc-stub:${grpcVersion}"

  testImplementation project(':instrumentation:grpc-1.6:testing')
}

test {
  // The agent context debug mechanism isn't compatible with the bridge approach which may add a
  // gRPC context to the root.
  jvmArgs "-Dotel.javaagent.experimental.thread-propagation-debugger.enabled=false"
}
