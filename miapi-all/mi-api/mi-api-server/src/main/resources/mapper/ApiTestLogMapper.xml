<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaomi.miapi.mapper.ApiTestLogMapper">
  <resultMap id="BaseResultMap" type="com.xiaomi.miapi.pojo.ApiTestLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="op_username" jdbcType="VARCHAR" property="opUsername" />
    <result column="interface_name" jdbcType="VARCHAR" property="interfaceName" />
    <result column="method_name" jdbcType="VARCHAR" property="methodName" />
    <result column="api_group" jdbcType="VARCHAR" property="apiGroup" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="env" jdbcType="VARCHAR" property="env" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="param" jdbcType="VARCHAR" property="param" />
    <result column="op_time" jdbcType="TIMESTAMP" property="opTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, op_username, interface_name, method_name, api_group, version, env, ip, url, param, 
    op_time
  </sql>
  <select id="selectByExample" parameterType="com.xiaomi.miapi.pojo.ApiTestLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from api_test_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from api_test_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from api_test_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiaomi.miapi.pojo.ApiTestLogExample">
    delete from api_test_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiaomi.miapi.pojo.ApiTestLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into api_test_log (op_username, interface_name, method_name, 
      api_group, version, env, 
      ip, url, param, op_time
      )
    values (#{opUsername,jdbcType=VARCHAR}, #{interfaceName,jdbcType=VARCHAR}, #{methodName,jdbcType=VARCHAR}, 
      #{apiGroup,jdbcType=VARCHAR}, #{version,jdbcType=VARCHAR}, #{env,jdbcType=VARCHAR}, 
      #{ip,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{param,jdbcType=VARCHAR}, #{opTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xiaomi.miapi.pojo.ApiTestLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into api_test_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="opUsername != null">
        op_username,
      </if>
      <if test="interfaceName != null">
        interface_name,
      </if>
      <if test="methodName != null">
        method_name,
      </if>
      <if test="apiGroup != null">
        api_group,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="env != null">
        env,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="param != null">
        param,
      </if>
      <if test="opTime != null">
        op_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="opUsername != null">
        #{opUsername,jdbcType=VARCHAR},
      </if>
      <if test="interfaceName != null">
        #{interfaceName,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null">
        #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="apiGroup != null">
        #{apiGroup,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="env != null">
        #{env,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="param != null">
        #{param,jdbcType=VARCHAR},
      </if>
      <if test="opTime != null">
        #{opTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiaomi.miapi.pojo.ApiTestLogExample" resultType="java.lang.Long">
    select count(*) from api_test_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update api_test_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.opUsername != null">
        op_username = #{record.opUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.interfaceName != null">
        interface_name = #{record.interfaceName,jdbcType=VARCHAR},
      </if>
      <if test="record.methodName != null">
        method_name = #{record.methodName,jdbcType=VARCHAR},
      </if>
      <if test="record.apiGroup != null">
        api_group = #{record.apiGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.env != null">
        env = #{record.env,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.param != null">
        param = #{record.param,jdbcType=VARCHAR},
      </if>
      <if test="record.opTime != null">
        op_time = #{record.opTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update api_test_log
    set id = #{record.id,jdbcType=INTEGER},
      op_username = #{record.opUsername,jdbcType=VARCHAR},
      interface_name = #{record.interfaceName,jdbcType=VARCHAR},
      method_name = #{record.methodName,jdbcType=VARCHAR},
      api_group = #{record.apiGroup,jdbcType=VARCHAR},
      version = #{record.version,jdbcType=VARCHAR},
      env = #{record.env,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      param = #{record.param,jdbcType=VARCHAR},
      op_time = #{record.opTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaomi.miapi.pojo.ApiTestLog">
    update api_test_log
    <set>
      <if test="opUsername != null">
        op_username = #{opUsername,jdbcType=VARCHAR},
      </if>
      <if test="interfaceName != null">
        interface_name = #{interfaceName,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null">
        method_name = #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="apiGroup != null">
        api_group = #{apiGroup,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="env != null">
        env = #{env,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="param != null">
        param = #{param,jdbcType=VARCHAR},
      </if>
      <if test="opTime != null">
        op_time = #{opTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaomi.miapi.pojo.ApiTestLog">
    update api_test_log
    set op_username = #{opUsername,jdbcType=VARCHAR},
      interface_name = #{interfaceName,jdbcType=VARCHAR},
      method_name = #{methodName,jdbcType=VARCHAR},
      api_group = #{apiGroup,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      env = #{env,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      param = #{param,jdbcType=VARCHAR},
      op_time = #{opTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into api_test_log
    (op_username, interface_name, method_name, api_group, version, env, ip, url, param, 
      op_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.opUsername,jdbcType=VARCHAR}, #{item.interfaceName,jdbcType=VARCHAR}, #{item.methodName,jdbcType=VARCHAR}, 
        #{item.apiGroup,jdbcType=VARCHAR}, #{item.version,jdbcType=VARCHAR}, #{item.env,jdbcType=VARCHAR}, 
        #{item.ip,jdbcType=VARCHAR}, #{item.url,jdbcType=VARCHAR}, #{item.param,jdbcType=VARCHAR}, 
        #{item.opTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into api_test_log (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'op_username'.toString() == column.value">
          #{item.opUsername,jdbcType=VARCHAR}
        </if>
        <if test="'interface_name'.toString() == column.value">
          #{item.interfaceName,jdbcType=VARCHAR}
        </if>
        <if test="'method_name'.toString() == column.value">
          #{item.methodName,jdbcType=VARCHAR}
        </if>
        <if test="'api_group'.toString() == column.value">
          #{item.apiGroup,jdbcType=VARCHAR}
        </if>
        <if test="'version'.toString() == column.value">
          #{item.version,jdbcType=VARCHAR}
        </if>
        <if test="'env'.toString() == column.value">
          #{item.env,jdbcType=VARCHAR}
        </if>
        <if test="'ip'.toString() == column.value">
          #{item.ip,jdbcType=VARCHAR}
        </if>
        <if test="'url'.toString() == column.value">
          #{item.url,jdbcType=VARCHAR}
        </if>
        <if test="'param'.toString() == column.value">
          #{item.param,jdbcType=VARCHAR}
        </if>
        <if test="'op_time'.toString() == column.value">
          #{item.opTime,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>