<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaomi.miapi.mapper.ApiEnvMapper">
  <resultMap id="BaseResultMap" type="com.xiaomi.miapi.pojo.ApiEnv">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="env_name" jdbcType="VARCHAR" property="envName" />
    <result column="http_domain" jdbcType="VARCHAR" property="httpDomain" />
    <result column="env_desc" jdbcType="VARCHAR" property="envDesc" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="sys_default" jdbcType="BIT" property="sysDefault" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xiaomi.miapi.pojo.ApiEnv">
    <result column="headers" jdbcType="LONGVARCHAR" property="headers" />
    <result column="req_param_form_data" jdbcType="LONGVARCHAR" property="reqParamFormData" />
    <result column="req_param_raw" jdbcType="LONGVARCHAR" property="reqParamRaw" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, env_name, http_domain, env_desc, project_id, sys_default
  </sql>
  <sql id="Blob_Column_List">
    headers, req_param_form_data, req_param_raw
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xiaomi.miapi.pojo.ApiEnvExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from api_env
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xiaomi.miapi.pojo.ApiEnvExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from api_env
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from api_env
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from api_env
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiaomi.miapi.pojo.ApiEnvExample">
    delete from api_env
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiaomi.miapi.pojo.ApiEnv">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into api_env (env_name, http_domain, env_desc, 
      project_id, sys_default, headers, 
      req_param_form_data, req_param_raw)
    values (#{envName,jdbcType=VARCHAR}, #{httpDomain,jdbcType=VARCHAR}, #{envDesc,jdbcType=VARCHAR}, 
      #{projectId,jdbcType=INTEGER}, #{sysDefault,jdbcType=BIT}, #{headers,jdbcType=LONGVARCHAR}, 
      #{reqParamFormData,jdbcType=LONGVARCHAR}, #{reqParamRaw,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaomi.miapi.pojo.ApiEnv">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into api_env
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="envName != null">
        env_name,
      </if>
      <if test="httpDomain != null">
        http_domain,
      </if>
      <if test="envDesc != null">
        env_desc,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="sysDefault != null">
        sys_default,
      </if>
      <if test="headers != null">
        headers,
      </if>
      <if test="reqParamFormData != null">
        req_param_form_data,
      </if>
      <if test="reqParamRaw != null">
        req_param_raw,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="envName != null">
        #{envName,jdbcType=VARCHAR},
      </if>
      <if test="httpDomain != null">
        #{httpDomain,jdbcType=VARCHAR},
      </if>
      <if test="envDesc != null">
        #{envDesc,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="sysDefault != null">
        #{sysDefault,jdbcType=BIT},
      </if>
      <if test="headers != null">
        #{headers,jdbcType=LONGVARCHAR},
      </if>
      <if test="reqParamFormData != null">
        #{reqParamFormData,jdbcType=LONGVARCHAR},
      </if>
      <if test="reqParamRaw != null">
        #{reqParamRaw,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiaomi.miapi.pojo.ApiEnvExample" resultType="java.lang.Long">
    select count(*) from api_env
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update api_env
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.envName != null">
        env_name = #{record.envName,jdbcType=VARCHAR},
      </if>
      <if test="record.httpDomain != null">
        http_domain = #{record.httpDomain,jdbcType=VARCHAR},
      </if>
      <if test="record.envDesc != null">
        env_desc = #{record.envDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.sysDefault != null">
        sys_default = #{record.sysDefault,jdbcType=BIT},
      </if>
      <if test="record.headers != null">
        headers = #{record.headers,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.reqParamFormData != null">
        req_param_form_data = #{record.reqParamFormData,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.reqParamRaw != null">
        req_param_raw = #{record.reqParamRaw,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update api_env
    set id = #{record.id,jdbcType=INTEGER},
      env_name = #{record.envName,jdbcType=VARCHAR},
      http_domain = #{record.httpDomain,jdbcType=VARCHAR},
      env_desc = #{record.envDesc,jdbcType=VARCHAR},
      project_id = #{record.projectId,jdbcType=INTEGER},
      sys_default = #{record.sysDefault,jdbcType=BIT},
      headers = #{record.headers,jdbcType=LONGVARCHAR},
      req_param_form_data = #{record.reqParamFormData,jdbcType=LONGVARCHAR},
      req_param_raw = #{record.reqParamRaw,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update api_env
    set id = #{record.id,jdbcType=INTEGER},
      env_name = #{record.envName,jdbcType=VARCHAR},
      http_domain = #{record.httpDomain,jdbcType=VARCHAR},
      env_desc = #{record.envDesc,jdbcType=VARCHAR},
      project_id = #{record.projectId,jdbcType=INTEGER},
      sys_default = #{record.sysDefault,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaomi.miapi.pojo.ApiEnv">
    update api_env
    <set>
      <if test="envName != null">
        env_name = #{envName,jdbcType=VARCHAR},
      </if>
      <if test="httpDomain != null">
        http_domain = #{httpDomain,jdbcType=VARCHAR},
      </if>
      <if test="envDesc != null">
        env_desc = #{envDesc,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="sysDefault != null">
        sys_default = #{sysDefault,jdbcType=BIT},
      </if>
      <if test="headers != null">
        headers = #{headers,jdbcType=LONGVARCHAR},
      </if>
      <if test="reqParamFormData != null">
        req_param_form_data = #{reqParamFormData,jdbcType=LONGVARCHAR},
      </if>
      <if test="reqParamRaw != null">
        req_param_raw = #{reqParamRaw,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xiaomi.miapi.pojo.ApiEnv">
    update api_env
    set env_name = #{envName,jdbcType=VARCHAR},
      http_domain = #{httpDomain,jdbcType=VARCHAR},
      env_desc = #{envDesc,jdbcType=VARCHAR},
      project_id = #{projectId,jdbcType=INTEGER},
      sys_default = #{sysDefault,jdbcType=BIT},
      headers = #{headers,jdbcType=LONGVARCHAR},
      req_param_form_data = #{reqParamFormData,jdbcType=LONGVARCHAR},
      req_param_raw = #{reqParamRaw,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaomi.miapi.pojo.ApiEnv">
    update api_env
    set env_name = #{envName,jdbcType=VARCHAR},
      http_domain = #{httpDomain,jdbcType=VARCHAR},
      env_desc = #{envDesc,jdbcType=VARCHAR},
      project_id = #{projectId,jdbcType=INTEGER},
      sys_default = #{sysDefault,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into api_env
    (env_name, http_domain, env_desc, project_id, sys_default, headers, req_param_form_data, 
      req_param_raw)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.envName,jdbcType=VARCHAR}, #{item.httpDomain,jdbcType=VARCHAR}, #{item.envDesc,jdbcType=VARCHAR}, 
        #{item.projectId,jdbcType=INTEGER}, #{item.sysDefault,jdbcType=BIT}, #{item.headers,jdbcType=LONGVARCHAR}, 
        #{item.reqParamFormData,jdbcType=LONGVARCHAR}, #{item.reqParamRaw,jdbcType=LONGVARCHAR}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into api_env (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'env_name'.toString() == column.value">
          #{item.envName,jdbcType=VARCHAR}
        </if>
        <if test="'http_domain'.toString() == column.value">
          #{item.httpDomain,jdbcType=VARCHAR}
        </if>
        <if test="'env_desc'.toString() == column.value">
          #{item.envDesc,jdbcType=VARCHAR}
        </if>
        <if test="'project_id'.toString() == column.value">
          #{item.projectId,jdbcType=INTEGER}
        </if>
        <if test="'sys_default'.toString() == column.value">
          #{item.sysDefault,jdbcType=BIT}
        </if>
        <if test="'headers'.toString() == column.value">
          #{item.headers,jdbcType=LONGVARCHAR}
        </if>
        <if test="'req_param_form_data'.toString() == column.value">
          #{item.reqParamFormData,jdbcType=LONGVARCHAR}
        </if>
        <if test="'req_param_raw'.toString() == column.value">
          #{item.reqParamRaw,jdbcType=LONGVARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>