<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="run.mone.z.desensitization.mapper.ZDesensitizationRecordMapper">
  <resultMap id="BaseResultMap" type="run.mone.z.desensitization.pojo.ZDesensitizationRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="duration_time" jdbcType="BIGINT" property="durationTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="run.mone.z.desensitization.pojo.ZDesensitizationRecord">
    <result column="text_before" jdbcType="LONGVARCHAR" property="textBefore" />
    <result column="text_after" jdbcType="LONGVARCHAR" property="textAfter" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gmt_create, creator, status, duration_time
  </sql>
  <sql id="Blob_Column_List">
    text_before, text_after
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="run.mone.z.desensitization.pojo.ZDesensitizationRecordExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from z_desensitization_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="run.mone.z.desensitization.pojo.ZDesensitizationRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from z_desensitization_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from z_desensitization_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from z_desensitization_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="run.mone.z.desensitization.pojo.ZDesensitizationRecordExample">
    delete from z_desensitization_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="run.mone.z.desensitization.pojo.ZDesensitizationRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into z_desensitization_record (gmt_create, creator, status, 
      duration_time, text_before, text_after
      )
    values (#{gmtCreate,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{durationTime,jdbcType=BIGINT}, #{textBefore,jdbcType=LONGVARCHAR}, #{textAfter,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="run.mone.z.desensitization.pojo.ZDesensitizationRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into z_desensitization_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="durationTime != null">
        duration_time,
      </if>
      <if test="textBefore != null">
        text_before,
      </if>
      <if test="textAfter != null">
        text_after,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="durationTime != null">
        #{durationTime,jdbcType=BIGINT},
      </if>
      <if test="textBefore != null">
        #{textBefore,jdbcType=LONGVARCHAR},
      </if>
      <if test="textAfter != null">
        #{textAfter,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="run.mone.z.desensitization.pojo.ZDesensitizationRecordExample" resultType="java.lang.Long">
    select count(*) from z_desensitization_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update z_desensitization_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.durationTime != null">
        duration_time = #{record.durationTime,jdbcType=BIGINT},
      </if>
      <if test="record.textBefore != null">
        text_before = #{record.textBefore,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.textAfter != null">
        text_after = #{record.textAfter,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update z_desensitization_record
    set id = #{record.id,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      duration_time = #{record.durationTime,jdbcType=BIGINT},
      text_before = #{record.textBefore,jdbcType=LONGVARCHAR},
      text_after = #{record.textAfter,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update z_desensitization_record
    set id = #{record.id,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      creator = #{record.creator,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      duration_time = #{record.durationTime,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="run.mone.z.desensitization.pojo.ZDesensitizationRecord">
    update z_desensitization_record
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="durationTime != null">
        duration_time = #{durationTime,jdbcType=BIGINT},
      </if>
      <if test="textBefore != null">
        text_before = #{textBefore,jdbcType=LONGVARCHAR},
      </if>
      <if test="textAfter != null">
        text_after = #{textAfter,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="run.mone.z.desensitization.pojo.ZDesensitizationRecord">
    update z_desensitization_record
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      duration_time = #{durationTime,jdbcType=BIGINT},
      text_before = #{textBefore,jdbcType=LONGVARCHAR},
      text_after = #{textAfter,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="run.mone.z.desensitization.pojo.ZDesensitizationRecord">
    update z_desensitization_record
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      creator = #{creator,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      duration_time = #{durationTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into z_desensitization_record
    (gmt_create, creator, status, duration_time, text_before, text_after)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.gmtCreate,jdbcType=TIMESTAMP}, #{item.creator,jdbcType=VARCHAR}, #{item.status,jdbcType=INTEGER}, 
        #{item.durationTime,jdbcType=BIGINT}, #{item.textBefore,jdbcType=LONGVARCHAR}, 
        #{item.textAfter,jdbcType=LONGVARCHAR})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into z_desensitization_record (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'gmt_create'.toString() == column.value">
          #{item.gmtCreate,jdbcType=TIMESTAMP}
        </if>
        <if test="'creator'.toString() == column.value">
          #{item.creator,jdbcType=VARCHAR}
        </if>
        <if test="'status'.toString() == column.value">
          #{item.status,jdbcType=INTEGER}
        </if>
        <if test="'duration_time'.toString() == column.value">
          #{item.durationTime,jdbcType=BIGINT}
        </if>
        <if test="'text_before'.toString() == column.value">
          #{item.textBefore,jdbcType=LONGVARCHAR}
        </if>
        <if test="'text_after'.toString() == column.value">
          #{item.textAfter,jdbcType=LONGVARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>