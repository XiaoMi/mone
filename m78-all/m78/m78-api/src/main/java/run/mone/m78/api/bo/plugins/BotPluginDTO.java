package run.mone.m78.api.bo.plugins;

import com.xiaomi.mone.http.docs.annotations.HttpApiDocClassDefine;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

/**
 * @author HawickMason@xiaomi.com
 * @date 3/5/24 14:19
 */
@NoArgsConstructor
@AllArgsConstructor
@Data
@Builder
public class BotPluginDTO implements Serializable {

    private static final long serialVersionUID = -1354236482542765218L;

    @HttpApiDocClassDefine(value = "id", required = true, description = "组件id", defaultValue = "更新时需要传递")
    private Long id;

    @HttpApiDocClassDefine(value = "orgId", required = true, description = "组件所属插件id", defaultValue = "组件所属插件id")
    private Long orgId;

    @HttpApiDocClassDefine(value = "name", required = true, description = "组件名称", defaultValue = "")
    private String name;

    @HttpApiDocClassDefine(value = "userName", required = false, description = "用户名，即创建人", defaultValue = "")
    private String userName;

    @HttpApiDocClassDefine(value = "modifier", required = false, description = "更新人", defaultValue = "")
    private String modifier;

    @HttpApiDocClassDefine(value = "status", required = false, description = "组件启用状态", defaultValue = "0：启用，1：不启用")
    private Integer status;

    @HttpApiDocClassDefine(value = "debugStatus", required = false, description = "组件调试状态", defaultValue = "0：未调试，1：调试成功，2：调试失败")
    private Integer debugStatus;

    @HttpApiDocClassDefine(value = "createTime", required = false, description = "组件创建时间", defaultValue = "组件创建时间")
    private String createTime;

    @HttpApiDocClassDefine(value = "apiUrl", required = false, description = "组件访问url", defaultValue = "")
    private String apiUrl;

    @HttpApiDocClassDefine(value = "avatarUrl", required = false, description = "组件头像的地址", defaultValue = "")
    private String avatarUrl;

    @HttpApiDocClassDefine(value = "type", required = false, description = "组件类型,http/dubbo/grpc(目前只有http，可以不传)", defaultValue = "")
    private String type;

    @HttpApiDocClassDefine(value = "featureRouterId", required = false, description = "关联的featureRouterId", defaultValue = "无需传递")
    private Long featureRouterId;

    @HttpApiDocClassDefine(value = "meta", required = false, description = "请求元信息, 形如:{\"http_headers\": {\"content-type\": \"application/json\"}, \"http_method\": \"POST\"}", defaultValue = "")
    private String meta;

    @HttpApiDocClassDefine(value = "botPluginMeta", required = false, description = "请求元信息, 对象格式", defaultValue = "")
    private BotPluginMeta botPluginMeta;

    @HttpApiDocClassDefine(value = "desc", required = false, description = "组件描述", defaultValue = "创建时就需要传递")
    private String desc;

    @HttpApiDocClassDefine(value = "display", required = false, description = "插件返回内容展示字段", defaultValue = "插件返回内容展示字段")
    private String display;

    @NoArgsConstructor
    @AllArgsConstructor
    @Data
    @Builder
    public static class BotPluginMeta implements Serializable {

        private static final long serialVersionUID = -8187551393789090633L;

        private String desc;

        //http
        private Map<String, String> http_headers;
        private String http_method;

        //dubbo
        private String dubboServiceName;
        private String dubboServiceGroup;
        private String dubboServiceVersion;
        private String dubboMethodName;
        private List<String> dubboMethodParamtypes;
        private Integer timeout;
        private Map<String, String> rpcContext;

        private List<BotPluginMetaParam> input;
        private List<BotPluginMetaParam> output;
        private String display; // specify the final output field when directly invoked from bot chat
        /**
         * # @see run.mone.m78.service.dao.entity.PluginResTypeEnum
         */
        private int resContentType;
    }

    @NoArgsConstructor
    @AllArgsConstructor
    @Data
    @Builder
    public static class BotPluginMetaParam implements Serializable {

        private static final long serialVersionUID = -6229927767805613601L;

        private String id; // uuid generated by FE

        private String name;

        /**
         * @see run.mone.m78.api.bo.flow.NodeInputInfo
         * or
         * @see run.mone.m78.api.bo.flow.NodeOutputInfo
         */
        private String valueType; //String、Object、Array<string>、Array<object>

        private String originalType; //如果有，则存储真实的原始类型

        private String desc;

        private List<BotPluginMetaParam> children;

        private Boolean required;
    }
}
